
@prefix rr: <http://www.w3.org/ns/r2rml#>.
@prefix rml: <http://semweb.mmlab.be/ns/rml#>.
@prefix ql: <http://semweb.mmlab.be/ns/ql#>.
@prefix schema: <http://schema.org/>.
@prefix ex: <http://example.org/>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix dbr: <http://dbpedia.org/resource/>.
@prefix : <http://example.org/smarthabits/>.

:DeviceMapping a rr:TriplesMap;
  rml:logicalSource [
    rml:source "data/source_a/data.json";
    rml:referenceFormulation ql:JSONPath;
    rml:iterator "$.devices[*]"
  ];
  rr:subjectMap [
    rr:template "http://example.org/device/{assetId}";
    rr:class schema:Device;
  ];
  rr:predicateObjectMap [
    rr:predicate schema:name;
    rr:objectMap [ rml:reference "name" ]
  ];
  rr:predicateObjectMap [
    rr:predicate schema:serialNumber;
    rr:objectMap [ rml:reference "serialNumber" ]
  ];
  rr:predicateObjectMap [
    rr:predicate schema:manufacturer;
    rr:objectMap [ rr:template "http://example.org/manufacturer/{manufacturerId}" ]
  ];
  # realtion with user
  rr:predicateObjectMap [
    rr:predicate schema:owner;
    rr:objectMap [ rr:template "http://example.org/user/{userId}" ]
  ].
 


:ActuatorMapping a rr:TriplesMap;
  rml:logicalSource [
    rml:source "data/source_a/data.json";
    rml:referenceFormulation ql:JSONPath;
    rml:iterator "$.actuators[*]"
  ];
  rr:subjectMap [
    rr:template "http://example.org/actuator/{id}";
    rr:class schema:Thing;
  ];
  rr:predicateObjectMap [
    rr:predicate schema:isPartOf;
    rr:objectMap [ rr:template "http://example.org/device/{deviceId}" ]
  ].


:UIDeviceMapping a rr:TriplesMap;
  rml:logicalSource [
    rml:source "data/source_a/data.json";
    rml:referenceFormulation ql:JSONPath;
    rml:iterator "$.uiDevices[*]"
  ];
  rr:subjectMap [
    rr:template "http://example.org/uidevice/{id}";
    rr:class schema:Product;
  ];
  rr:predicateObjectMap [
    rr:predicate schema:isPartOf;
    rr:objectMap [ rr:template "http://example.org/device/{deviceId}" ]
  ].


:SensorMapping a rr:TriplesMap;
  rml:logicalSource [
    rml:source "data/source_a/data.json";
    rml:referenceFormulation ql:JSONPath;
    rml:iterator "$.sensors[*]"
  ];
  rr:subjectMap [
    rr:template "http://example.org/sensor/{id}";
    rr:class schema:Thing;
  ];
  rr:predicateObjectMap [
    rr:predicate schema:description;
    rr:objectMap [ rml:reference "description" ]
  ];
  rr:predicateObjectMap [
    rr:predicate ex:sensorType;
    rr:objectMap [ rml:reference "sensorType" ]
  ];
  rr:predicateObjectMap [
    rr:predicate schema:isPartOf;
    rr:objectMap [ rr:template "http://example.org/device/{deviceId}" ]
  ].

:ContextEventMapping a rr:TriplesMap;
    rml:logicalSource [
        rml:source "data/source_a/data.json";
        rml:referenceFormulation ql:JSONPath;
        rml:iterator "$.events[*]"
      ];
    rr:subjectMap [
        rr:template "http://example.com/sensormeasurementevent/{id}";
        rr:class ex:SensorMeasurementEvent
    ];
    rr:predicateObjectMap [
        rr:predicate ex:timestamp;
        rr:objectMap [ rml:reference "timestamp"; rr:datatype xsd:dateTime ]
    ];
    rr:predicateObjectMap [
        rr:predicate ex:dimension;
        rr:objectMap [ rml:reference "dimension" ]
    ];
    rr:predicateObjectMap [
        rr:predicate ex:value;
        rr:objectMap [ rml:reference "value"; rr:datatype xsd:double ]
    ];
    rr:predicateObjectMap [
        rr:predicate ex:originId;
        rr:objectMap [ rml:reference "originId" ]
    ];
    rr:predicateObjectMap [
        rr:predicate ex:originType;
        rr:objectMap [ rml:reference "originType" ]
    ].
